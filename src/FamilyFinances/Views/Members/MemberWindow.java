package FamilyFinances.Views.Members;

import FamilyFinances.Commons.Helpers.EnumsHelper;
import FamilyFinances.Controllers.ImplementsMembers.IDeleteMemberController;
import FamilyFinances.Controllers.Interfaces.Families.IGetFamiliesController;
import FamilyFinances.Controllers.Interfaces.Members.ICreateMemberController;
import FamilyFinances.Controllers.Interfaces.Members.IGetMemberController;
import FamilyFinances.Controllers.Interfaces.Members.IUpdateMemberController;
import FamilyFinances.Controllers.Interfaces.Users.ILoginUserController;
import FamilyFinances.Domain.Constants.FamilyRoleEnum;
import FamilyFinances.Domain.Constants.UserStatusEnum;
import FamilyFinances.Domain.Models.Member;
import FamilyFinances.Infrastructure.Configurations.DependencyContainer;
import FamilyFinances.Main;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author johnarrieta
 */
public class MemberWindow extends javax.swing.JDialog {

    private DependencyContainer dependencyContainer;
    private IGetFamiliesController getFamiliesController;
    private ILoginUserController loginUserController;
    private ICreateMemberController createMemberController;
    private IGetMemberController getMemberController;
    private IUpdateMemberController updateMemberController;
    private IDeleteMemberController deleteMemberController;

    /**
     * Creates new form MemberWindows2
     */
    public MemberWindow(java.awt.Frame parent, boolean modal, DependencyContainer dependencyContainer) {
        super(parent, modal);
        initComponents();
        this.dependencyContainer = dependencyContainer;
        getFamiliesController = dependencyContainer.resolve(IGetFamiliesController.class);
        loginUserController = dependencyContainer.resolve(ILoginUserController.class);
        createMemberController = dependencyContainer.resolve(ICreateMemberController.class);
        getMemberController = dependencyContainer.resolve(IGetMemberController.class);
        updateMemberController = dependencyContainer.resolve(IUpdateMemberController.class);
        deleteMemberController = dependencyContainer.resolve(IDeleteMemberController.class);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderRadioGroupField = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        familyComboField = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        familyRolesComboField = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        parentUserField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        secondNameField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        firstLasNameField = new javax.swing.JTextField();
        secondLasNameField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        dateOfBirthDatePickField = new org.jdesktop.swingx.JXDatePicker();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        femaleRadioField = new javax.swing.JRadioButton();
        maleRadioField = new javax.swing.JRadioButton();
        otherRadioField = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        ocupationField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        phoneNumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        listButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FamilyFinances/Views/Icons/Members4.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Datos del miembro de la familia:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 15))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Familia:");

        familyComboField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        familyComboField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        familyComboField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                familyComboFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Usuario:");

        familyRolesComboField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        familyRolesComboField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Rol:");

        parentUserField.setEditable(false);
        parentUserField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Primer nombre:");

        firstNameField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        firstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameFieldActionPerformed(evt);
            }
        });

        secondNameField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Segundo nombre:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Primer apellido:");

        firstLasNameField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        secondLasNameField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Segundo apellido:");

        dateOfBirthDatePickField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Fecha de nacimiento:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Gemero:");

        genderRadioGroupField.add(femaleRadioField);
        femaleRadioField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        femaleRadioField.setText("Mujer");

        genderRadioGroupField.add(maleRadioField);
        maleRadioField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        maleRadioField.setText("Hombre");

        genderRadioGroupField.add(otherRadioField);
        otherRadioField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        otherRadioField.setText("Otros");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Ocupacion:");

        ocupationField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Telefono:");

        phoneNumber.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(secondNameField)
                    .addComponent(dateOfBirthDatePickField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(maleRadioField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(femaleRadioField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(otherRadioField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ocupationField)
                    .addComponent(phoneNumber)
                    .addComponent(secondLasNameField)
                    .addComponent(firstLasNameField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(parentUserField)
                    .addComponent(familyComboField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(familyRolesComboField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(firstNameField))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(familyComboField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(familyRolesComboField, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(parentUserField, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(firstNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(secondNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(firstLasNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(secondLasNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(dateOfBirthDatePickField, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maleRadioField)
                    .addComponent(femaleRadioField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(otherRadioField)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ocupationField, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestion de mimbros familiares");

        listButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FamilyFinances/Views/Icons/list48px.png"))); // NOI18N

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FamilyFinances/Views/Icons/add48px.png"))); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FamilyFinances/Views/Icons/search48px.png"))); // NOI18N

        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FamilyFinances/Views/Icons/edit48px.png"))); // NOI18N
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FamilyFinances/Views/Icons/delete48px.png"))); // NOI18N
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton)
                        .addGap(18, 18, 18)
                        .addComponent(editButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(listButton)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listButton)
                    .addComponent(addButton)
                    .addComponent(searchButton)
                    .addComponent(editButton)
                    .addComponent(deleteButton))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameFieldActionPerformed

    private void familyComboFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_familyComboFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_familyComboFieldActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        loadFamilies();
        loadFamilyRole();
        dateOfBirthDatePickField.getEditor().setEditable(false);
        var loginUser = loginUserController.getCurrentUser();
        parentUserField.setText(Main.currentUser.getName());
        try {
            var currentMember = getMemberController.excuteAction(Main.currentUser.getId());
            loadMember(currentMember);
            enableButtons(false, false, true, true, true);
        } catch (Exception e) {
            if (familyComboField.getItemCount() > 1) {
                enableButtons(true, false, false, false, false);
            } else {
                enableButtons(false, false, false, false, false);
            }
            JOptionPane.showMessageDialog(this, e.getMessage(), "Informacion", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_formWindowOpened

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try {
            var option = JOptionPane.showConfirmDialog(
                    this,
                    "Deseas crear este miembro",
                    "Confirmar",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE
            );
            if (option == JOptionPane.NO_OPTION) {
                return;
            }
            var selectedFamillyIndex = familyComboField.getSelectedIndex();
            validateFields(selectedFamillyIndex, "Debe seleccionar una familia");
            var selectFamilyItem = familyComboField.getSelectedItem().toString();
            var selecetedFamilyId = Integer.parseInt(selectFamilyItem
                    .substring(0, selectFamilyItem.indexOf(" ")).trim());
            var selectedFamilyRoleIndex = familyRolesComboField.getSelectedIndex();
            validateFields(selectedFamilyRoleIndex, "Debe seleccionar un rol en la familia");
            var selectedFamilyRole = familyRolesComboField.getSelectedItem().toString();
            var familyRole = EnumsHelper.getFamilyRoleEnum(selectedFamilyRole);
            var firstName = firstNameField.getText();
            validateFields(firstName, "Debe el primer nombre es requerido");
            var secondName = secondNameField.getText();
            secondName = secondName.isBlank() ? null : secondName;
            var firstLastName = firstLasNameField.getText();
            validateFields(firstLastName, "Debe el primer apellido es requerido");
            var secondLastName = secondLasNameField.getText();
            secondLastName = secondLastName.isBlank() ? null : secondLastName;
            var selectedDateOfBirth = dateOfBirthDatePickField.getDate();
            validateFields(selectedDateOfBirth, "Debe seleccionar una fecha de nacimiento");
            var dateOfBirth = selectedDateOfBirth.toInstant()
                    .atZone(ZoneId.systemDefault())
                    .toLocalDate();
            validateFields(dateOfBirth, "La fecha de nacimiento no es valida");
            var selectedGender = genderRadioGroupField.getSelection();
            validateFields(selectedGender, "Debe seleccionar un genero");
            var geneder = "";
            if (maleRadioField.isSelected()) {
                geneder = maleRadioField.getText();
            } else if (femaleRadioField.isSelected()) {
                geneder = femaleRadioField.getText();
            } else {
                geneder = otherRadioField.getText();
            }
            var ocupation = ocupationField.getText();
            ocupation = ocupation.isBlank() ? null : ocupation;
            var phoneNumber = this.phoneNumber.getText();
            phoneNumber = phoneNumber.isBlank() ? null : phoneNumber;

            createMemberController.executeAction(
                    Main.currentUser.getId(),
                    UserStatusEnum.ENABLED,
                    firstName,
                    secondName,
                    firstLastName,
                    secondLastName,
                    geneder,
                    dateOfBirth,
                    ocupation,
                    familyRole,
                    phoneNumber, selecetedFamilyId, Main.currentUser.getId());
            JOptionPane.showMessageDialog(this, "El miembreo fue creado");
            enableButtons(false, false, true, true, true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Verificar", JOptionPane.ERROR_MESSAGE);
        }
 

    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        try {
            var option = JOptionPane.showConfirmDialog(
                    this,
                    "Deseas modificar este miembro",
                    "Confirmar",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE
            );
            if (option == JOptionPane.NO_OPTION) {
                return;
            }
            var selectedFamillyIndex = familyComboField.getSelectedIndex();
            validateFields(selectedFamillyIndex, "Debe seleccionar una familia");
            var selectFamilyItem = familyComboField.getSelectedItem().toString();
            var selecetedFamilyId = Integer.parseInt(selectFamilyItem
                    .substring(0, selectFamilyItem.indexOf(" ")).trim());
            var selectedFamilyRoleIndex = familyRolesComboField.getSelectedIndex();
            validateFields(selectedFamilyRoleIndex, "Debe seleccionar un rol en la familia");
            var selectedFamilyRole = familyRolesComboField.getSelectedItem().toString();
            var familyRole = EnumsHelper.getFamilyRoleEnum(selectedFamilyRole);
            var firstName = firstNameField.getText();
            validateFields(firstName, "Debe el primer nombre es requerido");
            var secondName = secondNameField.getText();
            secondName = secondName.isBlank() ? null : secondName;
            var firstLastName = firstLasNameField.getText();
            validateFields(firstLastName, "Debe el primer apellido es requerido");
            var secondLastName = secondLasNameField.getText();
            secondLastName = secondLastName.isBlank() ? null : secondLastName;
            var selectedDateOfBirth = dateOfBirthDatePickField.getDate();
            validateFields(selectedDateOfBirth, "Debe seleccionar una fecha de nacimiento");
            var dateOfBirth = selectedDateOfBirth.toInstant()
                    .atZone(ZoneId.systemDefault())
                    .toLocalDate();
            validateFields(dateOfBirth, "La fecha de nacimiento no es valida");
            var selectedGender = genderRadioGroupField.getSelection();
            validateFields(selectedGender, "Debe seleccionar un genero");
            var geneder = "";
            if (maleRadioField.isSelected()) {
                geneder = maleRadioField.getText();
            } else if (femaleRadioField.isSelected()) {
                geneder = femaleRadioField.getText();
            } else {
                geneder = otherRadioField.getText();
            }
            var ocupation = ocupationField.getText();
            ocupation = ocupation.isBlank() ? null : ocupation;
            var phoneNumber = this.phoneNumber.getText();
            phoneNumber = phoneNumber.isBlank() ? null : phoneNumber;

            var updateMember = updateMemberController.executeAction(
                    Main.currentUser.getId(),
                    UserStatusEnum.ENABLED,
                    firstName,
                    secondName,
                    firstLastName,
                    secondLastName,
                    geneder,
                    dateOfBirth,
                    ocupation,
                    familyRole,
                    phoneNumber, 
                    selecetedFamilyId, 
                    Main.currentUser);
              Main.currentUser.setMember(updateMember);
            JOptionPane.showMessageDialog(this, "El miembreo fue modificado");
            enableButtons(false, false, true, true, true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Verificar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        
         var option = JOptionPane.showConfirmDialog(
                    this,
                    "Deseas eliminar este miembro",
                    "Confirmar",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE
            );
            if (option == JOptionPane.NO_OPTION) {
                return;
            }
        try {
               deleteMemberController.executeAction(Main.currentUser.getId());
              JOptionPane.showMessageDialog(this, "El miembre fue eliminado");
              Main.currentUser.setMember(null);
              resetForm();
              enableButtons(true, false, false, false, true);
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(this, ex.getMessage(), "Verificar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void resetForm() {
        familyComboField.setSelectedIndex(0);
        familyRolesComboField.setSelectedIndex(0);
        firstNameField.setText("");
        secondNameField.setText("");
        firstLasNameField.setText("");
        secondLasNameField.setText("");
        dateOfBirthDatePickField.getEditor().setText("");
        genderRadioGroupField.clearSelection();
        ocupationField.setText("");
        phoneNumber.setText("");
    }

    private void validateFields(Object fieldValue, String errorMessage) {
        if (fieldValue == null) {
            throw new IllegalArgumentException(errorMessage);
        }
        if (fieldValue instanceof String) {
            if (((String) fieldValue).isBlank()) {
                throw new IllegalArgumentException(errorMessage);
            }
        } else if (fieldValue instanceof Integer) {
            if (((Integer) fieldValue) < 1) {
                throw new IllegalArgumentException(errorMessage);
            }
        } else if (fieldValue instanceof LocalDate) {
            if (((LocalDate) fieldValue).isAfter(LocalDate.now())) {
                throw new IllegalArgumentException(errorMessage);
            }
        }
    }

    private void loadFamilyRole() {
        var familiRoleComboModel = new DefaultComboBoxModel<String>();
        familiRoleComboModel.addElement("Seleccione uno...");
        Stream.of(FamilyRoleEnum.values())
                .forEach(familyRole -> {
                    var roleInSpanish = EnumsHelper.getFamilyReleInSpanish(familyRole);
                    familiRoleComboModel.addElement(roleInSpanish);
                });
        familyRolesComboField.setModel(familiRoleComboModel);
    }

    private void loadFamilies() {
        var familiesComboModel = new DefaultComboBoxModel<String>();
        familiesComboModel.addElement("Seleccione una...");
        try {
            getFamiliesController.executeAction()
                    .stream()
                    .forEach(family -> {
                        var item = family.getId() + " - " + family.getName();
                        familiesComboModel.addElement(item);
                    });

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            enableButtons(false, false, false, false, false);
        }
        familyComboField.setModel(familiesComboModel);
    }

    public void enableButtons(boolean add, boolean search, boolean edit, boolean delete, boolean list) {
        addButton.setEnabled(add);
        searchButton.setEnabled(search);
        editButton.setEnabled(edit);
        deleteButton.setEnabled(delete);
        listButton.setEnabled(list);
    }

    private void loadMember(Member member) {
        var familyItem = member.getFamily().getId() + " - " + member.getFamily().getName();
        familyComboField.setSelectedItem(familyItem);
        familyRolesComboField.setSelectedItem(EnumsHelper.getFamilyReleInSpanish(member.getFamilyRole()));
        firstNameField.setText(member.getFirstName());
        secondNameField.setText(member.getSecondName());
        firstLasNameField.setText(member.getFirstLastName());
        secondLasNameField.setText(member.getSecondLastName());
        var zonedDateTime = member.getDateOfBirth().atStartOfDay(ZoneId.systemDefault());
        var dateOfBirth = Date.from(zonedDateTime.toInstant());
        dateOfBirthDatePickField.setDate(dateOfBirth);
        dateOfBirthDatePickField.getEditor().setValue(dateOfBirth);

        if (member.getGender().equals(maleRadioField.getText())) {
            maleRadioField.setSelected(true);
        } else if (member.getGender().equals(femaleRadioField.getText())) {
            femaleRadioField.setSelected(true);
        } else if (member.getGender().equals(otherRadioField.getText())) {
            otherRadioField.setSelected(true);
        }
        ocupationField.setText(member.getOccupation());
        phoneNumber.setText(member.getCellPhoneNumber());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MemberWindow dialog = new MemberWindow(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private org.jdesktop.swingx.JXDatePicker dateOfBirthDatePickField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JComboBox<String> familyComboField;
    private javax.swing.JComboBox<String> familyRolesComboField;
    private javax.swing.JRadioButton femaleRadioField;
    private javax.swing.JTextField firstLasNameField;
    private javax.swing.JTextField firstNameField;
    private javax.swing.ButtonGroup genderRadioGroupField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton listButton;
    private javax.swing.JRadioButton maleRadioField;
    private javax.swing.JTextField ocupationField;
    private javax.swing.JRadioButton otherRadioField;
    private javax.swing.JTextField parentUserField;
    private javax.swing.JTextField phoneNumber;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField secondLasNameField;
    private javax.swing.JTextField secondNameField;
    // End of variables declaration//GEN-END:variables
}
